{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js\";\nimport Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport GridSkeleton from '../utils/GridSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MoviesList({\n  movies,\n  error,\n  isFetching,\n  loadMoreMovies\n}) {\n  const handleLoadMoreMovies = () => {\n    loadMoreMovies();\n  };\n  let content;\n  if (isFetching) content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n    count: 6\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 29\n  }, this);else if (error) content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 29\n  }, this);else if (movies.length > 0) content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), movies.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-header\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoadMoreMovies,\n        children: \"Load more movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), isFetching ? /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this) : '']\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["Button","MovieItem","GridSkeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesList","movies","error","isFetching","loadMoreMovies","handleLoadMoreMovies","content","count","fileName","_jsxFileName","lineNumber","columnNumber","children","length","className","map","movie","id","onClick","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js"],"sourcesContent":["import Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport GridSkeleton from '../utils/GridSkeleton';\nfunction MoviesList({ movies, error, isFetching, loadMoreMovies }) {\n  const handleLoadMoreMovies = () => {\n    loadMoreMovies();\n  };\n\n  let content;\n\n  if (isFetching) content = <GridSkeleton count={6} />;\n  else if (error) content = <div>Error</div>;\n  else if (movies.length > 0)\n    content = (\n      <>\n        <div className=\"movies-grid\">\n          {movies.map((movie) => (\n            <MovieItem key={movie.id} movie={movie} />\n          ))}\n        </div>\n        {movies.length && (\n          <div className=\"loading-header\">\n            <Button onClick={handleLoadMoreMovies}>Load more movies</Button>\n          </div>\n        )}\n        {isFetching ? <GridSkeleton count={6} /> : ''}\n      </>\n    );\n\n  return (\n    <div>\n      <h1>Movies list</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default MoviesList;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjD,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC,KAAK;EAAEC,UAAU;EAAEC;AAAe,CAAC,EAAE;EACjE,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCD,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,IAAIE,OAAO;EAEX,IAAIH,UAAU,EAAEG,OAAO,gBAAGT,OAAA,CAACF,YAAY;IAACY,KAAK,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,KAChD,IAAIT,KAAK,EAAEI,OAAO,gBAAGT,OAAA;IAAAe,QAAA,EAAK;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,KACtC,IAAIV,MAAM,CAACY,MAAM,GAAG,CAAC,EACxBP,OAAO,gBACLT,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAKiB,SAAS,EAAC,aAAa;MAAAF,QAAA,EACzBX,MAAM,CAACc,GAAG,CAAEC,KAAK,iBAChBnB,OAAA,CAACH,SAAS;QAAgBsB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLV,MAAM,CAACY,MAAM,iBACZhB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAF,QAAA,eAC7Bf,OAAA,CAACJ,MAAM;QAACyB,OAAO,EAAEb,oBAAqB;QAAAO,QAAA,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACN,EACAR,UAAU,gBAAGN,OAAA,CAACF,YAAY;MAACY,KAAK,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,EAAE;EAAA,eAC7C,CACH;EAEH,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBL,OAAO;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACQ,EAAA,GAhCQnB,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}