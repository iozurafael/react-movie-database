{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js\",\n  _s = $RefreshSig$();\nimport { useFetchMoviesQuery } from '../../store';\nimport Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport { useState, useEffect } from 'react';\nimport GridSkeleton from '../utils/GridSkeleton';\nimport SearchField from '../utils/SearchField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MoviesList() {\n  _s();\n  const [moviePagination, setMoviePagination] = useState(1);\n  const {\n    data,\n    error,\n    isFetching\n  } = useFetchMoviesQuery(moviePagination);\n  const [movies, setMovies] = useState([]);\n  const [searchMovies, setSearchMovies] = useState('');\n  const handleLoadMoreMovies = () => {\n    setMoviePagination(moviePagination + 1);\n  };\n  const handleSearch = query => {\n    console.log(query);\n  };\n  useEffect(() => {\n    if (data && data.results) {\n      // Append new movies to the list\n      setMovies(prevMovies => [...prevMovies, ...data.results]);\n    }\n  }, [data]);\n  const content = isFetching && !movies.length ? /*#__PURE__*/_jsxDEV(GridSkeleton, {\n    count: 6\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchField, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), movies.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-header\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoadMoreMovies,\n        children: \"Load more movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), isFetching ? /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this) : '']\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesList, \"NcCTFtmVxFKS/4H97ROn8lxWlG4=\", false, function () {\n  return [useFetchMoviesQuery];\n});\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["useFetchMoviesQuery","Button","MovieItem","useState","useEffect","GridSkeleton","SearchField","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesList","_s","moviePagination","setMoviePagination","data","error","isFetching","movies","setMovies","searchMovies","setSearchMovies","handleLoadMoreMovies","handleSearch","query","console","log","results","prevMovies","content","length","count","fileName","_jsxFileName","lineNumber","columnNumber","children","onSearch","className","map","movie","id","onClick","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js"],"sourcesContent":["import { useFetchMoviesQuery } from '../../store';\nimport Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport { useState, useEffect } from 'react';\nimport GridSkeleton from '../utils/GridSkeleton';\nimport SearchField from '../utils/SearchField';\nfunction MoviesList() {\n  const [moviePagination, setMoviePagination] = useState(1);\n  const { data, error, isFetching } = useFetchMoviesQuery(moviePagination);\n  const [movies, setMovies] = useState([]);\n  const [searchMovies, setSearchMovies] = useState('');\n\n  const handleLoadMoreMovies = () => {\n    setMoviePagination(moviePagination + 1);\n  };\n\n  const handleSearch = (query) => {\n    console.log(query);\n  };\n\n  useEffect(() => {\n    if (data && data.results) {\n      // Append new movies to the list\n      setMovies((prevMovies) => [...prevMovies, ...data.results]);\n    }\n  }, [data]);\n\n  const content =\n    isFetching && !movies.length ? (\n      <GridSkeleton count={6} />\n    ) : error ? (\n      <div>Error</div>\n    ) : (\n      <>\n        <SearchField onSearch={handleSearch} />\n        <div className=\"movies-grid\">\n          {movies.map((movie) => (\n            <MovieItem key={movie.id} movie={movie} />\n          ))}\n        </div>\n        {movies.length && (\n          <div className=\"loading-header\">\n            <Button onClick={handleLoadMoreMovies}>Load more movies</Button>\n          </div>\n        )}\n        {isFetching ? <GridSkeleton count={6} /> : ''}\n      </>\n    );\n  return (\n    <div>\n      <h1>Movies list</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default MoviesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}