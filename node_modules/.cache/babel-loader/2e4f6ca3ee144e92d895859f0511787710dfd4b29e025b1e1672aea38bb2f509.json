{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/Pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery } from '../store';\nimport SearchField from '../components/utils/SearchField';\nimport GridSkeleton from '../components/utils/GridSkeleton';\nimport MoviesList from '../components/Movies/MoviesList';\nimport { FetchAllFavoriteMovies } from '../store/utils/FetchAllFavoriteMovies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function Home() {\n  _s();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n  const allFavoriteMovies = await fetchAllFavoriteMovies();\n  console.log(allFavoriteMovies);\n  //   const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n\n  //   const {\n  //     data: favoriteMovies,\n  //     error: errorFetchingFavoriteMovies,\n  //     isFetching: isFetchingFavoriteMovies,\n  //   } = useFetchFavoriteMoviesQuery(1);\n\n  //   useEffect(() => {\n  //     if (favoriteMovies && favoriteMovies.results) {\n  //       setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n  //     }\n  //   }, [favoriteMovies]);\n\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch\n  } = useSearchMoviesQuery({\n    searchTerm: searchMovies,\n    page: searchPagination\n  }, {\n    skip: searchMovies === ''\n  });\n  const onSearch = query => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n  const loadNextPage = () => {\n    setSearchPagination(prev => prev + 1);\n  };\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);else {\n        setMoviesList(prevMovies => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n  let content;\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }, this);\n  } else if (searchMovies !== '') {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesList,\n        nextPage: loadNextPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), isFetchingSearch && /*#__PURE__*/_jsxDEV(GridSkeleton, {\n        count: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchField, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"FXuyrUkwOBMXN5GcGQlGZQe64Pg=\", false, function () {\n  return [useSearchMoviesQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useRef","useSearchMoviesQuery","SearchField","GridSkeleton","MoviesList","FetchAllFavoriteMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","searchMovies","setSearchMovies","searchPagination","setSearchPagination","moviesList","setMoviesList","prevSearchDataRef","allFavoriteMovies","fetchAllFavoriteMovies","console","log","data","searchData","error","errorSearch","isFetching","isFetchingSearch","searchTerm","page","skip","onSearch","query","loadNextPage","prev","prevSearchData","current","results","prevMovies","content","length","count","fileName","_jsxFileName","lineNumber","columnNumber","children","movies","nextPage","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/Pages/Home.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery } from '../store';\nimport SearchField from '../components/utils/SearchField';\nimport GridSkeleton from '../components/utils/GridSkeleton';\nimport MoviesList from '../components/Movies/MoviesList';\nimport { FetchAllFavoriteMovies } from '../store/utils/FetchAllFavoriteMovies';\n\nasync function Home() {\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n\n  const allFavoriteMovies = await fetchAllFavoriteMovies();\n  console.log(allFavoriteMovies);\n  //   const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n\n  //   const {\n  //     data: favoriteMovies,\n  //     error: errorFetchingFavoriteMovies,\n  //     isFetching: isFetchingFavoriteMovies,\n  //   } = useFetchFavoriteMoviesQuery(1);\n\n  //   useEffect(() => {\n  //     if (favoriteMovies && favoriteMovies.results) {\n  //       setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n  //     }\n  //   }, [favoriteMovies]);\n\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch,\n  } = useSearchMoviesQuery(\n    {\n      searchTerm: searchMovies,\n      page: searchPagination,\n    },\n    {\n      skip: searchMovies === '',\n    }\n  );\n\n  const onSearch = (query) => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n\n  const loadNextPage = () => {\n    setSearchPagination((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);\n      else {\n        setMoviesList((prevMovies) => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  let content;\n\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = <GridSkeleton count={6} />;\n  } else if (searchMovies !== '') {\n    content = (\n      <>\n        <MoviesList movies={moviesList} nextPage={loadNextPage} />\n        {isFetchingSearch && <GridSkeleton count={6} />}\n      </>\n    );\n  }\n\n  return (\n    <div>\n      <SearchField onSearch={onSearch} />\n      {content}\n    </div>\n  );\n}\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}