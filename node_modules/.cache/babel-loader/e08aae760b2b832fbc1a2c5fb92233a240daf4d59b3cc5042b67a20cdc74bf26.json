{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/utils/FavoriteHeart.js\",\n  _s = $RefreshSig$();\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteHeart({\n  movie\n}) {\n  _s();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const dispatch = useDispatch();\n\n  //   useEffect(() => {\n  //     const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  //     const isFavorite = favorites.some((favorite) => favorite.id === movie.id);\n  //     setIsFavorite(isFavorite);\n  //   }, [movie.id]);\n\n  //   const toggleFavorite = () => {\n  //     const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  //     if (isFavorite) {\n  //       const updatedFavorites = favorites.filter(\n  //         (favMovie) => favMovie.id !== movie.id\n  //       );\n  //       localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //       dispatch(setFavoriteMovies(updatedFavorites));\n  //     } else {\n  //       const updatedFavorites = [...favorites, movie];\n  //       localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //       dispatch(setFavoriteMovies(updatedFavorites));\n  //     }\n\n  //     setIsFavorite(!isFavorite);\n  //   };\n\n  const heartIcon = isFavorite ? /*#__PURE__*/_jsxDEV(AiFillHeart, {\n    className: \"movies-item-heart\",\n    style: {\n      color: 'red'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n    className: \"movies-item-heart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  return {\n    heartIcon\n  };\n}\n_s(FavoriteHeart, \"nzNJxm3sBFNeuqE27trHfl7WpnM=\", false, function () {\n  return [useDispatch];\n});\n_c = FavoriteHeart;\nexport default FavoriteHeart;\nvar _c;\n$RefreshReg$(_c, \"FavoriteHeart\");","map":{"version":3,"names":["AiOutlineHeart","AiFillHeart","useEffect","useState","useDispatch","setFavoriteMovies","jsxDEV","_jsxDEV","FavoriteHeart","movie","_s","isFavorite","setIsFavorite","dispatch","heartIcon","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/utils/FavoriteHeart.js"],"sourcesContent":["import { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from '../../store';\n\nfunction FavoriteHeart({ movie }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const dispatch = useDispatch();\n\n  //   useEffect(() => {\n  //     const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  //     const isFavorite = favorites.some((favorite) => favorite.id === movie.id);\n  //     setIsFavorite(isFavorite);\n  //   }, [movie.id]);\n\n  //   const toggleFavorite = () => {\n  //     const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  //     if (isFavorite) {\n  //       const updatedFavorites = favorites.filter(\n  //         (favMovie) => favMovie.id !== movie.id\n  //       );\n  //       localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //       dispatch(setFavoriteMovies(updatedFavorites));\n  //     } else {\n  //       const updatedFavorites = [...favorites, movie];\n  //       localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //       dispatch(setFavoriteMovies(updatedFavorites));\n  //     }\n\n  //     setIsFavorite(!isFavorite);\n  //   };\n\n  const heartIcon = isFavorite ? (\n    <AiFillHeart className=\"movies-item-heart\" style={{ color: 'red' }} />\n  ) : (\n    <AiOutlineHeart className=\"movies-item-heart\" />\n  );\n\n  return { heartIcon };\n}\n\nexport default FavoriteHeart;\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,gBAAgB;AAC5D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMU,SAAS,GAAGH,UAAU,gBAC1BJ,OAAA,CAACN,WAAW;IAACc,SAAS,EAAC,mBAAmB;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEtEd,OAAA,CAACP,cAAc;IAACe,SAAS,EAAC;EAAmB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAChD;EAED,OAAO;IAAEP;EAAU,CAAC;AACtB;AAACJ,EAAA,CAnCQF,aAAa;EAAA,QAEHJ,WAAW;AAAA;AAAAkB,EAAA,GAFrBd,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}