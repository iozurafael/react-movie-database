{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js\";\nimport Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport GridSkeleton from '../utils/GridSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MoviesList({\n  data,\n  error,\n  isFetching\n}) {\n  // const [moviePagination, setMoviePagination] = useState(1);\n  // const { data, error, isFetching } = useFetchMoviesQuery(moviePagination);\n  // const [movies, setMovies] = useState([]);\n\n  // const [searchMovies, setSearchMovies] = useState('slam');\n  // const [searchPagination, setSearchPagination] = useState(1);\n  // const { searchData, searchError, searchIsFetching } = useSearchMoviesQuery(\n  //   searchMovies,\n  //   searchPagination\n  // );\n\n  // const handleLoadMoreMovies = () => {\n  //   setMoviePagination(moviePagination + 1);\n  // };\n\n  // const handleSearch = (query) => {\n  //   if (query !== '') setSearchMovies(query);\n  // };\n\n  // useEffect(() => {\n  //   if (data && data.results) {\n  //     setMovies((prevMovies) => [...prevMovies, ...data.results]);\n  //   }\n  // }, [data]);\n\n  let content;\n  if (isFetching && !movies.length) content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n    count: 6\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 47\n  }, this);else if (error) content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 29\n  }, this);\n  // else if (searchData) content = 'sal';\n  else content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), movies.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-header\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoadMoreMovies,\n        children: \"Load more movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this), isFetching ? /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this) : '']\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["Button","MovieItem","GridSkeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesList","data","error","isFetching","content","movies","length","count","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","movie","id","onClick","handleLoadMoreMovies","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js"],"sourcesContent":["import Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport GridSkeleton from '../utils/GridSkeleton';\nfunction MoviesList({ data, error, isFetching }) {\n  // const [moviePagination, setMoviePagination] = useState(1);\n  // const { data, error, isFetching } = useFetchMoviesQuery(moviePagination);\n  // const [movies, setMovies] = useState([]);\n\n  // const [searchMovies, setSearchMovies] = useState('slam');\n  // const [searchPagination, setSearchPagination] = useState(1);\n  // const { searchData, searchError, searchIsFetching } = useSearchMoviesQuery(\n  //   searchMovies,\n  //   searchPagination\n  // );\n\n  // const handleLoadMoreMovies = () => {\n  //   setMoviePagination(moviePagination + 1);\n  // };\n\n  // const handleSearch = (query) => {\n  //   if (query !== '') setSearchMovies(query);\n  // };\n\n  // useEffect(() => {\n  //   if (data && data.results) {\n  //     setMovies((prevMovies) => [...prevMovies, ...data.results]);\n  //   }\n  // }, [data]);\n\n  let content;\n\n  if (isFetching && !movies.length) content = <GridSkeleton count={6} />;\n  else if (error) content = <div>Error</div>;\n  // else if (searchData) content = 'sal';\n  else\n    content = (\n      <>\n        <div className=\"movies-grid\">\n          {movies.map((movie) => (\n            <MovieItem key={movie.id} movie={movie} />\n          ))}\n        </div>\n        {movies.length && (\n          <div className=\"loading-header\">\n            <Button onClick={handleLoadMoreMovies}>Load more movies</Button>\n          </div>\n        )}\n        {isFetching ? <GridSkeleton count={6} /> : ''}\n      </>\n    );\n\n  return (\n    <div>\n      <h1>Movies list</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default MoviesList;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,YAAY,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjD,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAW,CAAC,EAAE;EAC/C;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,IAAIC,OAAO;EAEX,IAAID,UAAU,IAAI,CAACE,MAAM,CAACC,MAAM,EAAEF,OAAO,gBAAGP,OAAA,CAACF,YAAY;IAACY,KAAK,EAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,KAClE,IAAIT,KAAK,EAAEE,OAAO,gBAAGP,OAAA;IAAAe,QAAA,EAAK;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC1C;EAAA,KAEEP,OAAO,gBACLP,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAKgB,SAAS,EAAC,aAAa;MAAAD,QAAA,EACzBP,MAAM,CAACS,GAAG,CAAEC,KAAK,iBAChBlB,OAAA,CAACH,SAAS;QAAgBqB,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLN,MAAM,CAACC,MAAM,iBACZT,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7Bf,OAAA,CAACJ,MAAM;QAACwB,OAAO,EAAEC,oBAAqB;QAAAN,QAAA,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CACN,EACAR,UAAU,gBAAGN,OAAA,CAACF,YAAY;MAACY,KAAK,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAG,EAAE;EAAA,eAC7C,CACH;EAEH,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAW;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBP,OAAO;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACQ,EAAA,GAtDQnB,UAAU;AAwDnB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}