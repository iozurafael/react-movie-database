{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js\",\n  _s = $RefreshSig$();\nimport { useFetchMoviesQuery } from '../../store';\nimport Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport { useState, useEffect } from 'react';\nimport GridSkeleton from '../utils/GridSkeleton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MoviesList() {\n  _s();\n  // const [moviePagination, setMoviePagination] = useState(1);\n  // const { data, error, isFetching } = useFetchMoviesQuery(moviePagination);\n  // const [movies, setMovies] = useState([]);\n  const [searchMovies, setSearchMovies] = useState('slam');\n  const [searchPagination, setSearchPagination] = useState(1);\n  const {\n    searchData,\n    searchError,\n    searchIsFetching\n  } = useSearchMoviesQuery(searchMovies, searchPagination);\n  const handleLoadMoreMovies = () => {\n    setMoviePagination(moviePagination + 1);\n  };\n  const handleSearch = query => {\n    if (query !== '') setSearchMovies(query);\n  };\n\n  // useEffect(() => {\n  //   if (data && data.results) {\n  //     setMovies((prevMovies) => [...prevMovies, ...data.results]);\n  //   }\n  // }, [data]);\n\n  let content;\n  if (isFetching && !movies.length) content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n    count: 6\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 47\n  }, this);else if (error) content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 29\n  }, this);\n  // else if (searchData) content = 'sal';\n  else content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), movies.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-header\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoadMoreMovies,\n        children: \"Load more movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), isFetching ? /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this) : '']\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesList, \"ml/rhsSwEwJ4IWEtkyok0sltdWI=\", true);\n_c = MoviesList;\nexport default MoviesList;\nvar _c;\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"names":["useFetchMoviesQuery","Button","MovieItem","useState","useEffect","GridSkeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesList","_s","searchMovies","setSearchMovies","searchPagination","setSearchPagination","searchData","searchError","searchIsFetching","useSearchMoviesQuery","handleLoadMoreMovies","setMoviePagination","moviePagination","handleSearch","query","content","isFetching","movies","length","count","fileName","_jsxFileName","lineNumber","columnNumber","error","children","className","map","movie","id","onClick","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MoviesList.js"],"sourcesContent":["import { useFetchMoviesQuery } from '../../store';\nimport Button from '../utils/Button';\nimport MovieItem from './MovieItem';\nimport { useState, useEffect } from 'react';\nimport GridSkeleton from '../utils/GridSkeleton';\nfunction MoviesList() {\n  // const [moviePagination, setMoviePagination] = useState(1);\n  // const { data, error, isFetching } = useFetchMoviesQuery(moviePagination);\n  // const [movies, setMovies] = useState([]);\n  const [searchMovies, setSearchMovies] = useState('slam');\n  const [searchPagination, setSearchPagination] = useState(1);\n  const { searchData, searchError, searchIsFetching } = useSearchMoviesQuery(\n    searchMovies,\n    searchPagination\n  );\n\n  const handleLoadMoreMovies = () => {\n    setMoviePagination(moviePagination + 1);\n  };\n\n  const handleSearch = (query) => {\n    if (query !== '') setSearchMovies(query);\n  };\n\n  // useEffect(() => {\n  //   if (data && data.results) {\n  //     setMovies((prevMovies) => [...prevMovies, ...data.results]);\n  //   }\n  // }, [data]);\n\n  let content;\n\n  if (isFetching && !movies.length) content = <GridSkeleton count={6} />;\n  else if (error) content = <div>Error</div>;\n  // else if (searchData) content = 'sal';\n  else\n    content = (\n      <>\n        <div className=\"movies-grid\">\n          {movies.map((movie) => (\n            <MovieItem key={movie.id} movie={movie} />\n          ))}\n        </div>\n        {movies.length && (\n          <div className=\"loading-header\">\n            <Button onClick={handleLoadMoreMovies}>Load more movies</Button>\n          </div>\n        )}\n        {isFetching ? <GridSkeleton count={6} /> : ''}\n      </>\n    );\n\n  return (\n    <div>\n      <h1>Movies list</h1>\n      {content}\n    </div>\n  );\n}\n\nexport default MoviesList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}