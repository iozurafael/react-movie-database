{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/Pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery } from '../store';\nimport SearchField from '../components/utils/SearchField';\nimport GridSkeleton from '../components/utils/GridSkeleton';\nimport MoviesList from '../components/Movies/MoviesList';\nimport NoContent from '../components/Movies/NoContent';\nimport Button from '../components/utils/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch\n  } = useSearchMoviesQuery({\n    searchTerm: searchMovies,\n    page: searchPagination\n  }, {\n    skip: searchMovies === ''\n  });\n  const onSearch = query => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n  const loadNextPage = () => {\n    setSearchPagination(prev => prev + 1);\n  };\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);else {\n        setMoviesList(prevMovies => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n  let content;\n\n  // if (errorSearch) {\n  //   content = 'Error';\n  // } else if (isFetchingSearch && !moviesList.length) {\n  //   content = <GridSkeleton count={9} />;\n  // }\n\n  if (moviesList.length) {\n    if (searchMovies !== '') {\n      if (searchData !== prevSearchDataRef.current) {\n        console.log('salut');\n      }\n      content = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n          movies: moviesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-header\",\n          children: searchPagination < searchData.total_pages ? /*#__PURE__*/_jsxDEV(Button, {\n            onClick: loadNextPage,\n            children: \"Load more movies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"That's all the results for your search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), isFetchingSearch && /*#__PURE__*/_jsxDEV(GridSkeleton, {\n          count: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true);\n    }\n  } else {\n    if (isFetchingSearch) {\n      content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n        count: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  // else if (searchMovies !== '' && !moviesList.length && !isFetchingSearch) {\n  //   content = (\n  //     <NoContent>\n  //       You have searched for something that does not exist.\n  //     </NoContent>\n  //   );\n  // } else if (searchMovies !== '') {\n  //   content = (\n  //     <>\n  //       <MoviesList movies={moviesList} />\n  //       <div className=\"loading-header\">\n  //         {searchPagination < searchData.total_pages ? (\n  //           <Button onClick={loadNextPage}>Load more movies</Button>\n  //         ) : (\n  //           <p>That's all the results for your search</p>\n  //         )}\n  //       </div>\n  //       {isFetchingSearch && <GridSkeleton count={6} />}\n  //     </>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"safePage\",\n    children: [/*#__PURE__*/_jsxDEV(SearchField, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"FXuyrUkwOBMXN5GcGQlGZQe64Pg=\", false, function () {\n  return [useSearchMoviesQuery];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useRef","useSearchMoviesQuery","SearchField","GridSkeleton","MoviesList","NoContent","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","searchMovies","setSearchMovies","searchPagination","setSearchPagination","moviesList","setMoviesList","prevSearchDataRef","data","searchData","error","errorSearch","isFetching","isFetchingSearch","searchTerm","page","skip","onSearch","query","loadNextPage","prev","prevSearchData","current","results","prevMovies","content","length","console","log","children","movies","fileName","_jsxFileName","lineNumber","columnNumber","className","total_pages","onClick","count","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/Pages/Home.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery } from '../store';\nimport SearchField from '../components/utils/SearchField';\nimport GridSkeleton from '../components/utils/GridSkeleton';\nimport MoviesList from '../components/Movies/MoviesList';\nimport NoContent from '../components/Movies/NoContent';\nimport Button from '../components/utils/Button';\n\nfunction Home() {\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch,\n  } = useSearchMoviesQuery(\n    {\n      searchTerm: searchMovies,\n      page: searchPagination,\n    },\n    {\n      skip: searchMovies === '',\n    }\n  );\n\n  const onSearch = (query) => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n\n  const loadNextPage = () => {\n    setSearchPagination((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);\n      else {\n        setMoviesList((prevMovies) => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  let content;\n\n  // if (errorSearch) {\n  //   content = 'Error';\n  // } else if (isFetchingSearch && !moviesList.length) {\n  //   content = <GridSkeleton count={9} />;\n  // }\n\n  if (moviesList.length) {\n    if (searchMovies !== '') {\n      if (searchData !== prevSearchDataRef.current) {\n        console.log('salut');\n      }\n      content = (\n        <>\n          <MoviesList movies={moviesList} />\n          <div className=\"loading-header\">\n            {searchPagination < searchData.total_pages ? (\n              <Button onClick={loadNextPage}>Load more movies</Button>\n            ) : (\n              <p>That's all the results for your search</p>\n            )}\n          </div>\n          {isFetchingSearch && <GridSkeleton count={6} />}\n        </>\n      );\n    }\n  } else {\n    if (isFetchingSearch) {\n      content = <GridSkeleton count={6} />;\n    }\n  }\n\n  // else if (searchMovies !== '' && !moviesList.length && !isFetchingSearch) {\n  //   content = (\n  //     <NoContent>\n  //       You have searched for something that does not exist.\n  //     </NoContent>\n  //   );\n  // } else if (searchMovies !== '') {\n  //   content = (\n  //     <>\n  //       <MoviesList movies={moviesList} />\n  //       <div className=\"loading-header\">\n  //         {searchPagination < searchData.total_pages ? (\n  //           <Button onClick={loadNextPage}>Load more movies</Button>\n  //         ) : (\n  //           <p>That's all the results for your search</p>\n  //         )}\n  //       </div>\n  //       {isFetchingSearch && <GridSkeleton count={6} />}\n  //     </>\n  //   );\n  // }\n\n  return (\n    <div className=\"safePage\">\n      <SearchField onSearch={onSearch} />\n      {content}\n    </div>\n  );\n}\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}