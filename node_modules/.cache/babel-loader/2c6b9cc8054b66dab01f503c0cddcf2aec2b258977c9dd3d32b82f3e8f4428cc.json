{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/App.js\",\n  _s = $RefreshSig$();\nimport MoviesList from './components/Movies/MoviesList';\nimport Navbar from './components/Navigation/Navbar';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery, useFetchFavoriteMoviesQuery } from './store';\nimport SearchField from './components/utils/SearchField';\nimport GridSkeleton from './components/utils/GridSkeleton';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from './store/slices/favoriteMoviesSlice';\nimport Favorites from './components/Movies/Favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n  const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n  const {\n    data: favoriteMovies,\n    error: errorFetchingFavoriteMovies,\n    isFetching: isFetchingFavoriteMovies\n  } = useFetchFavoriteMoviesQuery(1);\n  if (favoriteMovies) {\n    dispatch(setFavoriteMovies(favoriteMovies));\n  }\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch\n  } = useSearchMoviesQuery({\n    searchTerm: searchMovies,\n    page: searchPagination\n  }, {\n    skip: searchMovies === ''\n  });\n  const onSearch = query => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n  const loadNextPage = () => {\n    setSearchPagination(prev => prev + 1);\n  };\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);else {\n        setMoviesList(prevMovies => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  // useEffect(() => {\n  //   if (favoriteMovies && favoriteMovies.results) {\n  //     setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n  //   }\n  // }, [favoriteMovies]);\n\n  let content;\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this);\n  } else if (searchMovies !== '') {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesList,\n        nextPage: loadNextPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), isFetchingSearch && /*#__PURE__*/_jsxDEV(GridSkeleton, {\n        count: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true);\n  }\n\n  // let favoriteContent;\n\n  // if (errorFetchingFavoriteMovies) {\n  //   content = 'Error';\n  // } else if (isFetchingFavoriteMovies && !favoriteMoviesList.length) {\n  //   content = <GridSkeleton count={6} />;\n  // } else\n  //   content = (\n  //     <>\n  //       <MoviesList movies={favoriteMoviesList} nextPage={loadNextPage} />\n  //       {isFetchingFavoriteMovies && <GridSkeleton count={6} />}\n  //     </>\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchField, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), content, /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j/zb5eeSFskFSJ2DSk7+JNVfHtw=\", false, function () {\n  return [useDispatch, useFetchFavoriteMoviesQuery, useSearchMoviesQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MoviesList","Navbar","useState","useEffect","useRef","useSearchMoviesQuery","useFetchFavoriteMoviesQuery","SearchField","GridSkeleton","useDispatch","setFavoriteMovies","Favorites","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","searchMovies","setSearchMovies","searchPagination","setSearchPagination","moviesList","setMoviesList","prevSearchDataRef","favoriteMoviesList","setFavoriteMoviesList","data","favoriteMovies","error","errorFetchingFavoriteMovies","isFetching","isFetchingFavoriteMovies","searchData","errorSearch","isFetchingSearch","searchTerm","page","skip","onSearch","query","loadNextPage","prev","prevSearchData","current","results","prevMovies","content","length","count","fileName","_jsxFileName","lineNumber","columnNumber","children","movies","nextPage","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/App.js"],"sourcesContent":["import MoviesList from './components/Movies/MoviesList';\nimport Navbar from './components/Navigation/Navbar';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery, useFetchFavoriteMoviesQuery } from './store';\nimport SearchField from './components/utils/SearchField';\nimport GridSkeleton from './components/utils/GridSkeleton';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from './store/slices/favoriteMoviesSlice';\nimport Favorites from './components/Movies/Favorites';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n\n  const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n\n  const {\n    data: favoriteMovies,\n    error: errorFetchingFavoriteMovies,\n    isFetching: isFetchingFavoriteMovies,\n  } = useFetchFavoriteMoviesQuery(1);\n\n  if (favoriteMovies) {\n    dispatch(setFavoriteMovies(favoriteMovies));\n  }\n\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch,\n  } = useSearchMoviesQuery(\n    {\n      searchTerm: searchMovies,\n      page: searchPagination,\n    },\n    {\n      skip: searchMovies === '',\n    }\n  );\n\n  const onSearch = (query) => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n\n  const loadNextPage = () => {\n    setSearchPagination((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);\n      else {\n        setMoviesList((prevMovies) => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  // useEffect(() => {\n  //   if (favoriteMovies && favoriteMovies.results) {\n  //     setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n  //   }\n  // }, [favoriteMovies]);\n\n  let content;\n\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = <GridSkeleton count={6} />;\n  } else if (searchMovies !== '') {\n    content = (\n      <>\n        <MoviesList movies={moviesList} nextPage={loadNextPage} />\n        {isFetchingSearch && <GridSkeleton count={6} />}\n      </>\n    );\n  }\n\n  // let favoriteContent;\n\n  // if (errorFetchingFavoriteMovies) {\n  //   content = 'Error';\n  // } else if (isFetchingFavoriteMovies && !favoriteMoviesList.length) {\n  //   content = <GridSkeleton count={6} />;\n  // } else\n  //   content = (\n  //     <>\n  //       <MoviesList movies={favoriteMoviesList} nextPage={loadNextPage} />\n  //       {isFetchingFavoriteMovies && <GridSkeleton count={6} />}\n  //     </>\n  //   );\n\n  return (\n    <div>\n      <Navbar />\n      <SearchField onSearch={onSearch} />\n      {content}\n      <Favorites />\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}