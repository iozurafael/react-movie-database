{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport MoviesList from './components/Movies/MoviesList';\nimport Navbar from './components/Navigation/Navbar';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery, useFetchFavoriteMoviesQuery } from './store';\nimport SearchField from './components/utils/SearchField';\nimport GridSkeleton from './components/utils/GridSkeleton';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from './store/slices/favoriteMoviesSlice';\nimport Favorites from './components/Movies/Favorites';\nimport Home from './Pages/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n\n  // const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n\n  const {\n    data: favoriteMovies,\n    error: errorFetchingFavoriteMovies,\n    isFetching: isFetchingFavoriteMovies\n  } = useFetchFavoriteMoviesQuery(1);\n  useEffect(() => {\n    if (favoriteMovies !== null && favoriteMovies !== void 0 && favoriteMovies.results) {\n      dispatch(setFavoriteMovies(favoriteMovies.results));\n    }\n  }, [favoriteMovies, dispatch]);\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch\n  } = useSearchMoviesQuery({\n    searchTerm: searchMovies,\n    page: searchPagination\n  }, {\n    skip: searchMovies === ''\n  });\n  const onSearch = query => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n  const loadNextPage = () => {\n    setSearchPagination(prev => prev + 1);\n  };\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);else {\n        setMoviesList(prevMovies => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  // useEffect(() => {\n  //   if (favoriteMovies && favoriteMovies.results) {\n  //     setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n  //   }\n  // }, [favoriteMovies]);\n\n  let content;\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }, this);\n  } else if (searchMovies !== '') {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesList,\n        nextPage: loadNextPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), isFetchingSearch && /*#__PURE__*/_jsxDEV(GridSkeleton, {\n        count: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true);\n  }\n\n  // let favoriteContent;\n\n  // if (errorFetchingFavoriteMovies) {\n  //   content = 'Error';\n  // } else if (isFetchingFavoriteMovies && !favoriteMoviesList.length) {\n  //   content = <GridSkeleton count={6} />;\n  // } else\n  //   content = (\n  //     <>\n  //       <MoviesList movies={favoriteMoviesList} nextPage={loadNextPage} />\n  //       {isFetchingFavoriteMovies && <GridSkeleton count={6} />}\n  //     </>\n  //   );\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //   <Navbar />\n  //   <SearchField onSearch={onSearch} />\n  //   {content}\n  //   <Favorites />\n  // </div>\n  ;\n}\n_s(App, \"jV0daDkrDjrlr9uXaraf+mO+oz4=\", false, function () {\n  return [useDispatch, useFetchFavoriteMoviesQuery, useSearchMoviesQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","MoviesList","Navbar","useState","useEffect","useRef","useSearchMoviesQuery","useFetchFavoriteMoviesQuery","SearchField","GridSkeleton","useDispatch","setFavoriteMovies","Favorites","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","searchMovies","setSearchMovies","searchPagination","setSearchPagination","moviesList","setMoviesList","prevSearchDataRef","data","favoriteMovies","error","errorFetchingFavoriteMovies","isFetching","isFetchingFavoriteMovies","results","searchData","errorSearch","isFetchingSearch","searchTerm","page","skip","onSearch","query","loadNextPage","prev","prevSearchData","current","prevMovies","content","length","count","fileName","_jsxFileName","lineNumber","columnNumber","children","movies","nextPage","Switch","path","exact","component","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport MoviesList from './components/Movies/MoviesList';\nimport Navbar from './components/Navigation/Navbar';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery, useFetchFavoriteMoviesQuery } from './store';\nimport SearchField from './components/utils/SearchField';\nimport GridSkeleton from './components/utils/GridSkeleton';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from './store/slices/favoriteMoviesSlice';\nimport Favorites from './components/Movies/Favorites';\nimport Home from './Pages/Home';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n\n  // const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n\n  const {\n    data: favoriteMovies,\n    error: errorFetchingFavoriteMovies,\n    isFetching: isFetchingFavoriteMovies,\n  } = useFetchFavoriteMoviesQuery(1);\n\n  useEffect(() => {\n    if (favoriteMovies?.results) {\n      dispatch(setFavoriteMovies(favoriteMovies.results));\n    }\n  }, [favoriteMovies, dispatch]);\n\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch,\n  } = useSearchMoviesQuery(\n    {\n      searchTerm: searchMovies,\n      page: searchPagination,\n    },\n    {\n      skip: searchMovies === '',\n    }\n  );\n\n  const onSearch = (query) => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n\n  const loadNextPage = () => {\n    setSearchPagination((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);\n      else {\n        setMoviesList((prevMovies) => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  // useEffect(() => {\n  //   if (favoriteMovies && favoriteMovies.results) {\n  //     setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n  //   }\n  // }, [favoriteMovies]);\n\n  let content;\n\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = <GridSkeleton count={6} />;\n  } else if (searchMovies !== '') {\n    content = (\n      <>\n        <MoviesList movies={moviesList} nextPage={loadNextPage} />\n        {isFetchingSearch && <GridSkeleton count={6} />}\n      </>\n    );\n  }\n\n  // let favoriteContent;\n\n  // if (errorFetchingFavoriteMovies) {\n  //   content = 'Error';\n  // } else if (isFetchingFavoriteMovies && !favoriteMoviesList.length) {\n  //   content = <GridSkeleton count={6} />;\n  // } else\n  //   content = (\n  //     <>\n  //       <MoviesList movies={favoriteMoviesList} nextPage={loadNextPage} />\n  //       {isFetchingFavoriteMovies && <GridSkeleton count={6} />}\n  //     </>\n  //   );\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </Router>\n    // <div>\n    //   <Navbar />\n    //   <SearchField onSearch={onSearch} />\n    //   {content}\n    //   <Favorites />\n    // </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}