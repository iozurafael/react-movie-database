{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/App.js\",\n  _s = $RefreshSig$();\nimport MoviesList from './components/Movies/MoviesList';\nimport Navbar from './components/Navigation/Navbar';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery, useFetchFavoriteMoviesQuery } from './store';\nimport SearchField from './components/utils/SearchField';\nimport GridSkeleton from './components/utils/GridSkeleton';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from './store/slices/favoriteMoviesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    data: favoriteMoviesData\n  } = useFetchFavoriteMoviesQuery(1);\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n  const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n  const {\n    data: favoriteMovies,\n    error: errorFetchingFavoriteMovies,\n    isFetching: isFetchingFavoriteMovies\n  } = useFetchFavoriteMoviesQuery(1);\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch\n  } = useSearchMoviesQuery({\n    searchTerm: searchMovies,\n    page: searchPagination\n  }, {\n    skip: searchMovies === ''\n  });\n  const onSearch = query => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n  const loadNextPage = () => {\n    setSearchPagination(prev => prev + 1);\n  };\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);else {\n        setMoviesList(prevMovies => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n  useEffect(() => {\n    if (favoriteMovies && favoriteMovies.results) {\n      setFavoriteMoviesList(prev => [...prev, ...favoriteMovies.results]);\n    }\n  }, [favoriteMovies]);\n  let content;\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }, this);\n  } else if (searchMovies !== '') {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesList,\n        nextPage: loadNextPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), isFetchingSearch && /*#__PURE__*/_jsxDEV(GridSkeleton, {\n        count: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true);\n  }\n  let favoriteContent;\n  if (errorFetchingFavoriteMovies) {\n    content = 'Error';\n  } else if (isFetchingFavoriteMovies && !favoriteMoviesList.length) {\n    content = /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this);\n  } else content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: favoriteMoviesList,\n      nextPage: loadNextPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), isFetchingFavoriteMovies && /*#__PURE__*/_jsxDEV(GridSkeleton, {\n      count: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchField, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), content, favoriteContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yl4iU8lzhlCaoKE+1ozLuH34448=\", false, function () {\n  return [useDispatch, useFetchFavoriteMoviesQuery, useFetchFavoriteMoviesQuery, useSearchMoviesQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["MoviesList","Navbar","useState","useEffect","useRef","useSearchMoviesQuery","useFetchFavoriteMoviesQuery","SearchField","GridSkeleton","useDispatch","setFavoriteMovies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","data","favoriteMoviesData","searchMovies","setSearchMovies","searchPagination","setSearchPagination","moviesList","setMoviesList","prevSearchDataRef","favoriteMoviesList","setFavoriteMoviesList","favoriteMovies","error","errorFetchingFavoriteMovies","isFetching","isFetchingFavoriteMovies","searchData","errorSearch","isFetchingSearch","searchTerm","page","skip","onSearch","query","loadNextPage","prev","prevSearchData","current","results","prevMovies","content","length","count","fileName","_jsxFileName","lineNumber","columnNumber","children","movies","nextPage","favoriteContent","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/App.js"],"sourcesContent":["import MoviesList from './components/Movies/MoviesList';\nimport Navbar from './components/Navigation/Navbar';\nimport { useState, useEffect, useRef } from 'react';\nimport { useSearchMoviesQuery, useFetchFavoriteMoviesQuery } from './store';\nimport SearchField from './components/utils/SearchField';\nimport GridSkeleton from './components/utils/GridSkeleton';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from './store/slices/favoriteMoviesSlice';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { data: favoriteMoviesData } = useFetchFavoriteMoviesQuery(1);\n  const [searchMovies, setSearchMovies] = useState('');\n  const [searchPagination, setSearchPagination] = useState(0);\n  const [moviesList, setMoviesList] = useState([]);\n  const prevSearchDataRef = useRef();\n\n  const [favoriteMoviesList, setFavoriteMoviesList] = useState([]);\n\n  const {\n    data: favoriteMovies,\n    error: errorFetchingFavoriteMovies,\n    isFetching: isFetchingFavoriteMovies,\n  } = useFetchFavoriteMoviesQuery(1);\n\n  const {\n    data: searchData,\n    error: errorSearch,\n    isFetching: isFetchingSearch,\n  } = useSearchMoviesQuery(\n    {\n      searchTerm: searchMovies,\n      page: searchPagination,\n    },\n    {\n      skip: searchMovies === '',\n    }\n  );\n\n  const onSearch = (query) => {\n    setSearchMovies(query);\n    setSearchPagination(1);\n  };\n\n  const loadNextPage = () => {\n    setSearchPagination((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    const prevSearchData = prevSearchDataRef.current;\n    if (searchData !== prevSearchData && searchData.results) {\n      if (searchPagination === 1) setMoviesList(searchData.results);\n      else {\n        setMoviesList((prevMovies) => [...prevMovies, ...searchData.results]);\n      }\n    }\n    prevSearchDataRef.current = searchData;\n  }, [searchData, searchPagination]);\n\n  useEffect(() => {\n    if (favoriteMovies && favoriteMovies.results) {\n      setFavoriteMoviesList((prev) => [...prev, ...favoriteMovies.results]);\n    }\n  }, [favoriteMovies]);\n\n  let content;\n\n  if (errorSearch) {\n    content = 'Error';\n  } else if (isFetchingSearch && !moviesList.length) {\n    content = <GridSkeleton count={6} />;\n  } else if (searchMovies !== '') {\n    content = (\n      <>\n        <MoviesList movies={moviesList} nextPage={loadNextPage} />\n        {isFetchingSearch && <GridSkeleton count={6} />}\n      </>\n    );\n  }\n\n  let favoriteContent;\n\n  if (errorFetchingFavoriteMovies) {\n    content = 'Error';\n  } else if (isFetchingFavoriteMovies && !favoriteMoviesList.length) {\n    content = <GridSkeleton count={6} />;\n  } else\n    content = (\n      <>\n        <MoviesList movies={favoriteMoviesList} nextPage={loadNextPage} />\n        {isFetchingFavoriteMovies && <GridSkeleton count={6} />}\n      </>\n    );\n\n  return (\n    <div>\n      <Navbar />\n      <SearchField onSearch={onSearch} />\n      {content}\n      {favoriteContent}\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}