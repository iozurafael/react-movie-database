{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { moviesApi } from './apis/moviesApi';\nimport { addMovies } from './slices/moviesSlice';\nexport const store = configureStore({\n  reducer: {\n    [moviesApi.reducerPath]: moviesApi.reducer\n  },\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware().concat(moviesApi.middleware);\n  }\n});\nsetupListeners(store.dispatch);\nexport { useFetchMoviesQuery, useSearchMoviesQuery } from './apis/moviesApi';","map":{"version":3,"names":["configureStore","setupListeners","moviesApi","addMovies","store","reducer","reducerPath","middleware","getDefaultMiddleware","concat","dispatch","useFetchMoviesQuery","useSearchMoviesQuery"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { moviesApi } from './apis/moviesApi';\nimport { addMovies } from './slices/moviesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    [moviesApi.reducerPath]: moviesApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) => {\n    return getDefaultMiddleware().concat(moviesApi.middleware);\n  },\n});\n\nsetupListeners(store.dispatch);\n\nexport { useFetchMoviesQuery, useSearchMoviesQuery } from './apis/moviesApi';\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,sBAAsB;AAEhD,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAE;IACP,CAACH,SAAS,CAACI,WAAW,GAAGJ,SAAS,CAACG;EACrC,CAAC;EACDE,UAAU,EAAGC,oBAAoB,IAAK;IACpC,OAAOA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,SAAS,CAACK,UAAU,CAAC;EAC5D;AACF,CAAC,CAAC;AAEFN,cAAc,CAACG,KAAK,CAACM,QAAQ,CAAC;AAE9B,SAASC,mBAAmB,EAAEC,oBAAoB,QAAQ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}