{"ast":null,"code":"var _s = $RefreshSig$();\n// api.js or data.js\nimport { useFetchFavoriteMoviesQuery } from '..'; // Import your query\n\nexport async function fetchAllFavoriteMovies() {\n  _s();\n  const allMovies = [];\n  let page = 1;\n  const {\n    data: firstPageData,\n    error\n  } = useFetchFavoriteMoviesQuery(page);\n  if (error) {\n    // Handle the error, e.g., return an error or show a message\n    return null;\n  }\n  if (firstPageData) {\n    allMovies.push(...firstPageData.results);\n    while (page < firstPageData.total_pages) {\n      page++;\n      const {\n        data,\n        error\n      } = useFetchFavoriteMoviesQuery(page);\n      if (error) {\n        // Handle the error, e.g., return an error or show a message\n        return null;\n      }\n      if (data) {\n        allMovies.push(...data.results);\n      }\n    }\n  }\n  console.log(allMovies);\n  return allMovies;\n}\n_s(fetchAllFavoriteMovies, \"tM9BHb8kEUXEgmRSUQ+p3O0Cj3E=\", false, function () {\n  return [useFetchFavoriteMoviesQuery, useFetchFavoriteMoviesQuery];\n});","map":{"version":3,"names":["useFetchFavoriteMoviesQuery","fetchAllFavoriteMovies","_s","allMovies","page","data","firstPageData","error","push","results","total_pages","console","log"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/store/utils/FetchAllFavoriteMovies.js"],"sourcesContent":["// api.js or data.js\nimport { useFetchFavoriteMoviesQuery } from '..'; // Import your query\n\nexport async function fetchAllFavoriteMovies() {\n  const allMovies = [];\n  let page = 1;\n\n  const { data: firstPageData, error } = useFetchFavoriteMoviesQuery(page);\n\n  if (error) {\n    // Handle the error, e.g., return an error or show a message\n    return null;\n  }\n\n  if (firstPageData) {\n    allMovies.push(...firstPageData.results);\n\n    while (page < firstPageData.total_pages) {\n      page++;\n      const { data, error } = useFetchFavoriteMoviesQuery(page);\n\n      if (error) {\n        // Handle the error, e.g., return an error or show a message\n        return null;\n      }\n\n      if (data) {\n        allMovies.push(...data.results);\n      }\n    }\n  }\n\n  console.log(allMovies);\n  return allMovies;\n}\n"],"mappings":";AAAA;AACA,SAASA,2BAA2B,QAAQ,IAAI,CAAC,CAAC;;AAElD,OAAO,eAAeC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAC7C,MAAMC,SAAS,GAAG,EAAE;EACpB,IAAIC,IAAI,GAAG,CAAC;EAEZ,MAAM;IAAEC,IAAI,EAAEC,aAAa;IAAEC;EAAM,CAAC,GAAGP,2BAA2B,CAACI,IAAI,CAAC;EAExE,IAAIG,KAAK,EAAE;IACT;IACA,OAAO,IAAI;EACb;EAEA,IAAID,aAAa,EAAE;IACjBH,SAAS,CAACK,IAAI,CAAC,GAAGF,aAAa,CAACG,OAAO,CAAC;IAExC,OAAOL,IAAI,GAAGE,aAAa,CAACI,WAAW,EAAE;MACvCN,IAAI,EAAE;MACN,MAAM;QAAEC,IAAI;QAAEE;MAAM,CAAC,GAAGP,2BAA2B,CAACI,IAAI,CAAC;MAEzD,IAAIG,KAAK,EAAE;QACT;QACA,OAAO,IAAI;MACb;MAEA,IAAIF,IAAI,EAAE;QACRF,SAAS,CAACK,IAAI,CAAC,GAAGH,IAAI,CAACI,OAAO,CAAC;MACjC;IACF;EACF;EAEAE,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;EACtB,OAAOA,SAAS;AAClB;AAACD,EAAA,CA/BqBD,sBAAsB;EAAA,QAIHD,2BAA2B,EAYtCA,2BAA2B;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}