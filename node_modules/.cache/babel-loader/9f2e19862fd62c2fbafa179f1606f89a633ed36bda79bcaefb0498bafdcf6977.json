{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/utils/FavoriteHeart.js\",\n  _s = $RefreshSig$();\nimport { AiOutlineHeart } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteHeart({\n  movie\n}) {\n  _s();\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    const isFavorite = favorites.some(favorite => favorite.id === movie.id);\n    setIsFavorite(isFavorite);\n  }, [movie.id]);\n  const [isFavorite, setIsFavorite] = useState(false);\n  const toggleFavorite = () => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    if (isFavorite) {\n      const updatedFavorites = favorites.filter(favMovie => favMovie.id !== movie.id);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    } else {\n      const updatedFavorites = [...favorites, movie];\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    }\n    setIsFavorite(!isFavorite);\n  };\n  const heartIcon = isFavorite ? /*#__PURE__*/_jsxDEV(AiFillHeart, {\n    className: \"movies-item-heart\",\n    onClick: toggleFavorite,\n    style: {\n      color: 'red'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n    className: \"movies-item-heart\",\n    onClick: toggleFavorite\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  return {\n    heartIcon\n  };\n}\n_s(FavoriteHeart, \"eT1Z/APRZ/55d1wrK/hwIW7hsLE=\");\n_c = FavoriteHeart;\nexport default FavoriteHeart();\nvar _c;\n$RefreshReg$(_c, \"FavoriteHeart\");","map":{"version":3,"names":["AiOutlineHeart","useEffect","useState","useDispatch","jsxDEV","_jsxDEV","FavoriteHeart","movie","_s","favorites","JSON","parse","localStorage","getItem","isFavorite","some","favorite","id","setIsFavorite","toggleFavorite","updatedFavorites","filter","favMovie","setItem","stringify","dispatch","setFavoriteMovies","heartIcon","AiFillHeart","className","onClick","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/utils/FavoriteHeart.js"],"sourcesContent":["import { AiOutlineHeart } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nfunction FavoriteHeart({ movie }) {\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    const isFavorite = favorites.some((favorite) => favorite.id === movie.id);\n    setIsFavorite(isFavorite);\n  }, [movie.id]);\n\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const toggleFavorite = () => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    if (isFavorite) {\n      const updatedFavorites = favorites.filter(\n        (favMovie) => favMovie.id !== movie.id\n      );\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    } else {\n      const updatedFavorites = [...favorites, movie];\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    }\n\n    setIsFavorite(!isFavorite);\n  };\n\n  const heartIcon = isFavorite ? (\n    <AiFillHeart\n      className=\"movies-item-heart\"\n      onClick={toggleFavorite}\n      style={{ color: 'red' }}\n    />\n  ) : (\n    <AiOutlineHeart className=\"movies-item-heart\" onClick={toggleFavorite} />\n  );\n\n  return { heartIcon };\n}\n\nexport default FavoriteHeart();\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,aAAaA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAChCP,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IACrE,MAAMC,UAAU,GAAGL,SAAS,CAACM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKV,KAAK,CAACU,EAAE,CAAC;IACzEC,aAAa,CAACJ,UAAU,CAAC;EAC3B,CAAC,EAAE,CAACP,KAAK,CAACU,EAAE,CAAC,CAAC;EAEd,MAAM,CAACH,UAAU,EAAEI,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMiB,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMV,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAErE,IAAIC,UAAU,EAAE;MACd,MAAMM,gBAAgB,GAAGX,SAAS,CAACY,MAAM,CACtCC,QAAQ,IAAKA,QAAQ,CAACL,EAAE,KAAKV,KAAK,CAACU,EACtC,CAAC;MACDL,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEb,IAAI,CAACc,SAAS,CAACJ,gBAAgB,CAAC,CAAC;MACnEK,QAAQ,CAACC,iBAAiB,CAACN,gBAAgB,CAAC,CAAC;IAC/C,CAAC,MAAM;MACL,MAAMA,gBAAgB,GAAG,CAAC,GAAGX,SAAS,EAAEF,KAAK,CAAC;MAC9CK,YAAY,CAACW,OAAO,CAAC,WAAW,EAAEb,IAAI,CAACc,SAAS,CAACJ,gBAAgB,CAAC,CAAC;MACnEK,QAAQ,CAACC,iBAAiB,CAACN,gBAAgB,CAAC,CAAC;IAC/C;IAEAF,aAAa,CAAC,CAACJ,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMa,SAAS,GAAGb,UAAU,gBAC1BT,OAAA,CAACuB,WAAW;IACVC,SAAS,EAAC,mBAAmB;IAC7BC,OAAO,EAAEX,cAAe;IACxBY,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC,gBAEF/B,OAAA,CAACL,cAAc;IAAC6B,SAAS,EAAC,mBAAmB;IAACC,OAAO,EAAEX;EAAe;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CACzE;EAED,OAAO;IAAET;EAAU,CAAC;AACtB;AAACnB,EAAA,CAtCQF,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAwCtB,eAAeA,aAAa,CAAC,CAAC;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}