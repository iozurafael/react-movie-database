{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MovieItem.js\",\n  _s = $RefreshSig$();\n// import { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from '../../store';\nimport { useNavigate } from 'react-router-dom';\nimport FavoriteHeart from '../utils/FavoriteHeart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieItem({\n  movie\n}) {\n  _s();\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isImageBroken, setIsImageBroken] = useState(false);\n  // const [isFavorite, setIsFavorite] = useState(false);\n\n  const handleClick = () => {\n    navigate(`/movies/${movie.id}`);\n  };\n  const handleImageError = () => {\n    setIsImageBroken(true);\n  };\n\n  // useEffect(() => {\n  //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  //   const isFavorite = favorites.some((favorite) => favorite.id === movie.id);\n  //   setIsFavorite(isFavorite);\n  // }, [movie.id]);\n\n  // const toggleFavorite = () => {\n  //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  //   if (isFavorite) {\n  //     const updatedFavorites = favorites.filter(\n  //       (favMovie) => favMovie.id !== movie.id\n  //     );\n  //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //     dispatch(setFavoriteMovies(updatedFavorites));\n  //   } else {\n  //     const updatedFavorites = [...favorites, movie];\n  //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //     dispatch(setFavoriteMovies(updatedFavorites));\n  //   }\n\n  //   setIsFavorite(!isFavorite);\n  // };\n\n  const imageSrc = isImageBroken ? '/no-image-fallback.png' : `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n\n  // const heartIcon = isFavorite ? (\n  //   <AiFillHeart\n  //     className=\"movies-item-heart\"\n  //     onClick={toggleFavorite}\n  //     style={{ color: 'red' }}\n  //   />\n  // ) : (\n  //   <AiOutlineHeart className=\"movies-item-heart\" onClick={toggleFavorite} />\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: movie.title,\n      onError: handleImageError,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FavoriteHeart, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"movies-item-title\",\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieItem, \"vmfIslpPKnqzCqz/VLLyKwHQiIU=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieItem;\nexport default MovieItem;\nvar _c;\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"names":["useState","useEffect","useDispatch","setFavoriteMovies","useNavigate","FavoriteHeart","jsxDEV","_jsxDEV","MovieItem","movie","_s","navigate","isImageBroken","setIsImageBroken","handleClick","id","handleImageError","imageSrc","poster_path","className","children","src","alt","title","onError","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/Movies/MovieItem.js"],"sourcesContent":["// import { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from '../../store';\nimport { useNavigate } from 'react-router-dom';\nimport FavoriteHeart from '../utils/FavoriteHeart';\n\nfunction MovieItem({ movie }) {\n  // const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [isImageBroken, setIsImageBroken] = useState(false);\n  // const [isFavorite, setIsFavorite] = useState(false);\n\n  const handleClick = () => {\n    navigate(`/movies/${movie.id}`);\n  };\n\n  const handleImageError = () => {\n    setIsImageBroken(true);\n  };\n\n  // useEffect(() => {\n  //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n  //   const isFavorite = favorites.some((favorite) => favorite.id === movie.id);\n  //   setIsFavorite(isFavorite);\n  // }, [movie.id]);\n\n  // const toggleFavorite = () => {\n  //   const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n  //   if (isFavorite) {\n  //     const updatedFavorites = favorites.filter(\n  //       (favMovie) => favMovie.id !== movie.id\n  //     );\n  //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //     dispatch(setFavoriteMovies(updatedFavorites));\n  //   } else {\n  //     const updatedFavorites = [...favorites, movie];\n  //     localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  //     dispatch(setFavoriteMovies(updatedFavorites));\n  //   }\n\n  //   setIsFavorite(!isFavorite);\n  // };\n\n  const imageSrc = isImageBroken\n    ? '/no-image-fallback.png'\n    : `https://image.tmdb.org/t/p/original/${movie.poster_path}`;\n\n  // const heartIcon = isFavorite ? (\n  //   <AiFillHeart\n  //     className=\"movies-item-heart\"\n  //     onClick={toggleFavorite}\n  //     style={{ color: 'red' }}\n  //   />\n  // ) : (\n  //   <AiOutlineHeart className=\"movies-item-heart\" onClick={toggleFavorite} />\n  // );\n\n  return (\n    <div className=\"movies-item\">\n      <img\n        src={imageSrc}\n        alt={movie.title}\n        onError={handleImageError}\n        onClick={handleClick}\n      />\n\n      {/* {heartIcon} */}\n      <FavoriteHeart movie={movie} />\n\n      <p className=\"movies-item-title\">{movie.title}</p>\n    </div>\n  );\n}\n\nexport default MovieItem;\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,aAAa;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B;EACA,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzD;;EAEA,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBH,QAAQ,CAAE,WAAUF,KAAK,CAACM,EAAG,EAAC,CAAC;EACjC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,MAAMI,QAAQ,GAAGL,aAAa,GAC1B,wBAAwB,GACvB,uCAAsCH,KAAK,CAACS,WAAY,EAAC;;EAE9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEX,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bb,OAAA;MACEc,GAAG,EAAEJ,QAAS;MACdK,GAAG,EAAEb,KAAK,CAACc,KAAM;MACjBC,OAAO,EAAER,gBAAiB;MAC1BS,OAAO,EAAEX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAGFtB,OAAA,CAACF,aAAa;MAACI,KAAK,EAAEA;IAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/BtB,OAAA;MAAGY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEX,KAAK,CAACc;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACnB,EAAA,CApEQF,SAAS;EAAA,QAECJ,WAAW;AAAA;AAAA0B,EAAA,GAFrBtB,SAAS;AAsElB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}