{"ast":null,"code":"var _jsxFileName = \"/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/utils/FavoriteHeart.js\",\n  _s = $RefreshSig$();\nimport { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteHeart({\n  movie\n}) {\n  _s();\n  const [isFavorite, setIsFavorite] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    const isFavorite = favorites.some(favorite => favorite.id === movie.id);\n    setIsFavorite(isFavorite);\n  }, [movie.id]);\n  const toggleFavorite = () => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    if (isFavorite) {\n      const updatedFavorites = favorites.filter(favMovie => favMovie.id !== movie.id);\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    } else {\n      const updatedFavorites = [...favorites, movie];\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    }\n    setIsFavorite(!isFavorite);\n  };\n  const heartIcon = isFavorite ? /*#__PURE__*/_jsxDEV(AiFillHeart, {\n    onClick: toggleFavorite,\n    style: {\n      color: 'red'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(AiOutlineHeart, {\n    onClick: toggleFavorite\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heartIcon\",\n    children: heartIcon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_s(FavoriteHeart, \"ekU9SwDaNvQNO/dO6MZ3vD5PhlA=\", false, function () {\n  return [useDispatch];\n});\n_c = FavoriteHeart;\nexport default FavoriteHeart;\nvar _c;\n$RefreshReg$(_c, \"FavoriteHeart\");","map":{"version":3,"names":["AiOutlineHeart","AiFillHeart","useEffect","useState","useDispatch","setFavoriteMovies","jsxDEV","_jsxDEV","FavoriteHeart","movie","_s","isFavorite","setIsFavorite","dispatch","favorites","JSON","parse","localStorage","getItem","some","favorite","id","toggleFavorite","updatedFavorites","filter","favMovie","setItem","stringify","heartIcon","onClick","style","color","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/rafael.iozu/Work/Work/movieDBv2/db/src/components/utils/FavoriteHeart.js"],"sourcesContent":["import { AiOutlineHeart, AiFillHeart } from 'react-icons/ai';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFavoriteMovies } from '../../store';\n\nfunction FavoriteHeart({ movie }) {\n  const [isFavorite, setIsFavorite] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    const isFavorite = favorites.some((favorite) => favorite.id === movie.id);\n    setIsFavorite(isFavorite);\n  }, [movie.id]);\n\n  const toggleFavorite = () => {\n    const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n\n    if (isFavorite) {\n      const updatedFavorites = favorites.filter(\n        (favMovie) => favMovie.id !== movie.id\n      );\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    } else {\n      const updatedFavorites = [...favorites, movie];\n      localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n      dispatch(setFavoriteMovies(updatedFavorites));\n    }\n\n    setIsFavorite(!isFavorite);\n  };\n\n  const heartIcon = isFavorite ? (\n    <AiFillHeart onClick={toggleFavorite} style={{ color: 'red' }} />\n  ) : (\n    <AiOutlineHeart onClick={toggleFavorite} />\n  );\n\n  return <div className=\"heartIcon\">{heartIcon}</div>;\n}\n\nexport default FavoriteHeart;\n"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,gBAAgB;AAC5D,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,aAAaA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IACrE,MAAMP,UAAU,GAAGG,SAAS,CAACK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKZ,KAAK,CAACY,EAAE,CAAC;IACzET,aAAa,CAACD,UAAU,CAAC;EAC3B,CAAC,EAAE,CAACF,KAAK,CAACY,EAAE,CAAC,CAAC;EAEd,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMR,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IAErE,IAAIP,UAAU,EAAE;MACd,MAAMY,gBAAgB,GAAGT,SAAS,CAACU,MAAM,CACtCC,QAAQ,IAAKA,QAAQ,CAACJ,EAAE,KAAKZ,KAAK,CAACY,EACtC,CAAC;MACDJ,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEX,IAAI,CAACY,SAAS,CAACJ,gBAAgB,CAAC,CAAC;MACnEV,QAAQ,CAACR,iBAAiB,CAACkB,gBAAgB,CAAC,CAAC;IAC/C,CAAC,MAAM;MACL,MAAMA,gBAAgB,GAAG,CAAC,GAAGT,SAAS,EAAEL,KAAK,CAAC;MAC9CQ,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEX,IAAI,CAACY,SAAS,CAACJ,gBAAgB,CAAC,CAAC;MACnEV,QAAQ,CAACR,iBAAiB,CAACkB,gBAAgB,CAAC,CAAC;IAC/C;IAEAX,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMiB,SAAS,GAAGjB,UAAU,gBAC1BJ,OAAA,CAACN,WAAW;IAAC4B,OAAO,EAAEP,cAAe;IAACQ,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEjE5B,OAAA,CAACP,cAAc;IAAC6B,OAAO,EAAEP;EAAe;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC3C;EAED,oBAAO5B,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAET;EAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACrD;AAACzB,EAAA,CAnCQF,aAAa;EAAA,QAEHJ,WAAW;AAAA;AAAAkC,EAAA,GAFrB9B,aAAa;AAqCtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}